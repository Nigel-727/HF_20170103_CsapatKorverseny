package beadott;

/**
 *
 * @author Nigel-727
 */
public interface Data_PairingTables {
  int[][][] TABLE_FOR_THREE_TO_FOUR =
      {
        {{1,4}, {2,3}}, //[0][0..1][0..1]
        {{4,3}, {1,2}}, //[1][0..1][0..1]
        {{2,4}, {3,1}}  //[2][0..1][0..1]
      };
  int[][][] TABLE_FOR_FIVE_TO_SIX = 
      { 
        {{1,6}, {2,5}, {3,4}}, //[0][0..2][0..1]
        {{6,4}, {5,3}, {1,2}}, //[1][0..2][0..1]
        {{2,6}, {3,1}, {4,5}}, //[2][0..2][0..1]
        {{6,5}, {1,4}, {2,3}}, //[3][0..2][0..1]
        {{3,6}, {4,2}, {5,1}}  //[4][0..2][0..1]
      };
  int[][][] TABLE_FOR_SEVEN_TO_EIGHT = 
      {
        {{1,8}, {2,7}, {3,6}, {4,5}}, //[0][0..3][0..1]
        {{8,5}, {6,4}, {7,3}, {1,2}}, //[1][0..3][0..1]
        {{2,8}, {3,1}, {4,7}, {5,6}}, //[2][0..3][0..1]
        {{8,6}, {7,5}, {1,4}, {2,3}}, //[3][0..3][0..1]
        {{3,8}, {4,2}, {5,1}, {6,7}}, //[4][0..3][0..1]
        {{8,7}, {1,6}, {2,5}, {3,4}}, //[5][0..3][0..1]
        {{4,8}, {5,3}, {6,2}, {7,1}}  //[6][0..3][0..1]
      };
  int[][][] TABLE_FOR_NINE_TO_TEN =
      {
        {{1,10}, {2,9}, {3,8}, {4,7}, {5,6}}, //[0][0..4][0..1]
        {{10,6}, {7,5}, {8,4}, {9,3}, {1,2}}, //[1][0..4][0..1]
        {{2,10}, {3,1}, {4,9}, {5,8}, {6,7}}, //[2][0..4][0..1]
        {{10,7}, {8,6}, {9,5}, {1,4}, {2,3}}, //[3][0..4][0..1]
        {{3,10}, {4,2}, {5,1}, {6,9}, {7,8}}, //[4][0..4][0..1]
        {{10,8}, {9,7}, {1,6}, {2,5}, {3,4}}, //[5][0..4][0..1]
        {{4,10}, {5,3}, {6,2}, {7,1}, {8,9}}, //[6][0..4][0..1]
        {{10,9}, {1,8}, {2,7}, {3,6}, {4,5}}, //[7][0..4][0..1]
        {{5,10}, {6,4}, {7,3}, {8,2}, {9,1}}  //[8][0..4][0..1]
      };
  int[][][] TABLE_FOR_ELEVEN_TO_TWELVE =
      {
        {{1,12},  {2,11}, {3,10}, {4,9},  {5,8},  {6,7}}, //[0][0..5][0..1]
        {{12,7},  {8,6},  {9,5},  {10,4}, {11,3}, {1,2}}, //[1][0..5][0..1]
        {{2,12},  {3,1},  {4,11}, {5,10}, {6,9},  {7,8}}, //[2][0..5][0..1]
        {{12,8},  {9,7},  {10,6}, {11,5}, {1,4},  {2,3}}, //[3][0..5][0..1]
        {{3,12},  {4,2},  {5,1},  {6,11}, {7,10}, {8,9}}, //[4][0..5][0..1]
        {{12,9},  {10,8}, {11,7}, {1,6},  {2,5},  {3,4}}, //[5][0..5][0..1]
        {{4,12},  {5,3},  {6,2},  {7,1},  {8,11}, {9,10}}, //[6][0..5][0..1]
        {{12,10}, {11,9}, {1,8},  {2,7},  {3,6},  {4,5}}, //[7][0..5][0..1]
        {{5,12},  {6,4},  {7,3},  {8,2},  {9,1},  {10,11}}, //[8][0..5][0..1]
        {{12,11}, {1,10}, {2,9},  {3,8},  {4,7},  {5,6}}, //[9][0..5][0..1]
        {{6,12},  {7,5},  {8,4},  {9,3},  {10,2}, {11,1}}  //[10][0..5][0..1]
      };
  //
  int[][][][] PAIRINGTABLES = {
    TABLE_FOR_THREE_TO_FOUR,
    TABLE_FOR_FIVE_TO_SIX,
    TABLE_FOR_SEVEN_TO_EIGHT,
    TABLE_FOR_NINE_TO_TEN,
    TABLE_FOR_ELEVEN_TO_TWELVE
  };
  int[][] TABLE_BOUNDS = //#TODO Ezt vizsgáljuk h a fentihez az indexet kiválaszthassuk...
  { //...ami lehet h redundáns megoldás, hiszen a fentiek dimenziószámából is kiolvashatóak a határok. #mittegyek
    {3,4}, 
    {5,6},
    {7,8},
    {9,10},
    {11,12} 
  }; 
  //#TODO A fenti megjegyzés szerint lehet h az alábbi is redundáns? #mittegyek
  int MIN_PARTICIPANTS = TABLE_BOUNDS[0][0], //első sor, első oszlop
      MAX_PARTICIPANTS = TABLE_BOUNDS
          [TABLE_BOUNDS.length-1] //utolsó sor
          [ TABLE_BOUNDS[TABLE_BOUNDS.length-1].length-1 ]; //utolsó oszlop; ==[1] #ittésmost
}//interface